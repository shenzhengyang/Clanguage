// 畅通工程
/**
题目描述：
    某省调查城镇交通状况，得到现有城镇道路统计表，表中列出了每条道路直接连通的城镇。
	省政府“畅通工程”的目标是使全省任何两个城镇间都可以实现交通
	（但不一定有直接的道路相连，只要互相间接通过道路可达即可）。
	问最少还需要建设多少条道路？
输入：
    测试输入包含若干测试用例。
	每个测试用例的第1行给出两个正整数，分别是城镇数目N ( < 1000 )和道路数目M；
	随后的M行对应M条道路，每行给出一对正整数，分别是该条道路直接连通的两个城镇的编号。
	为简单起见，城镇从1到N编号。 
    注意:两个城市之间可以有多条道路相通,也就是说
    3 3
    1 2
    1 2
    2 1
    这种输入也是合法的
    当N为0时，输入结束，该用例不被处理。
输出：
    对每个测试用例，在1行里输出最少还需要建设的道路数目。
样例输入：
	4 2
	1 3
	4 3
	3 3
	1 2
	1 3
	2 3
	5 2
	1 2
	3 5
	999 0
	0
样例输出：
	1
	0
	2
	998
*/
#include<stdio.h>
#define N 1000
int Tree[1000]={0};
int findRoot(int x){
	if(Tree[x]==-1) return x;
	else{
		int tmp=findRoot(Tree[x]);
		Tree[x]=tmp;
		return tmp;
	}
}
int main(){
	int n,m;
	while(scanf("%d%d",&n,&m)!=EOF&&n!=0){
		int i;
		for(i=1;i<=n;i++){//初始化很关键
			Tree[i]=-1;
		}
		while(m--!=0){
			int a,b;
			scanf("%d%d",&a,&b);
			a=findRoot(a);
			b=findRoot(b);
			if(a!=b) Tree[a]=b;
		}
		int ans=0;
		for(i=1;i<=n;i++){
			if(Tree[i]==-1) ans++;
		}
		printf("%d\n",ans-1);
	}
	return 0;
}
//更多问题详见3网址：http://ac.jobdu.com/problem.php?pid=1444

